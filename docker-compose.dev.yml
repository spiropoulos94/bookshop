version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    ports:
      - "${SERVER_PORT:-8080}:8080"  
    env_file:
      - ./backend/.env  
    depends_on:
      redis:  
        condition: service_started
    networks:
      - my_network
    environment:
      - ENVIRONMENT=development   

  redis:
    image: redis:7.0-alpine  
    container_name: redis
    ports:
      - "6379:6379"  
    networks:
      - my_network  

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev  # Create a Dockerfile for the frontend
    ports:
      - "5173:5173"  # Expose the frontend port
    volumes:
      - ./frontend:/frontend  # Mount the frontend source code for hot reloading
      - /frontend/node_modules  # Prevent node_modules from being overwritten
    networks:
      - my_network  
    command: npm run dev  # Start the frontend in development mode
    depends_on:
      app:  
        condition: service_started
    environment:
      - MODE=development

networks:
  my_network:
    driver: bridge  
